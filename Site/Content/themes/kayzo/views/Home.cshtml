@using Meganium.Api.Trash
@using Meganium.Api.Trash
@model Meganium.Api.ViewModels.SiteViewModel
        	<!-- Banner Start -->
<div id="banner" class="row">
    <div class="slider-wrapper theme-default">
        <div id="slider" class="nivoSlider">

            @foreach (var post in Model.Managers.PostManager.GetFeatured())
            {
                var url = post.FeaturedMediaFile == null ? "" : post.FeaturedMediaFile.Url;
                <a href="@Url.Content(@post.UrlPath)">
                    @Url.Thumbnail(post.FeaturedMediaFile, 980, 418, true, "#banner-" + post.Id)
                </a>
            }
        </div>
        <!-- Banner Caption Start -->
        @foreach (var post in Model.Managers.PostManager.GetFeatured())
        {
            <div id="banner-@post.Id" class="nivo-html-caption">
                <div class="capt-heading">
                    <h1>@post.Title</h1>
                </div>
                <div class="capt-text">
                    <h4 class="white">@post.StartedAt.ToString("dd MMMM yyyy")</h4>
                    <p>
                        @Html.Raw(@post.PreviewContent)
                    </p>
                </div>
            </div>
        }
        <!-- Banner Caption End -->
    </div>
</div>
<!-- Banner End -->
<div class="clear"></div>
<!-- Container Start -->
<div class="container row">
    <!-- Event Counter Start -->
    @{
        var nextEvent = Model.Managers.PostManager.GetPublishedByPostTypeAfterDate("Evento", DateTime.Now).FirstOrDefault();
    }
    <div class="one-third column small-banners">
        @if (nextEvent != null)
        {
            var diff = nextEvent.StartedAt - DateTime.Now;
            <a href="@Url.Content(nextEvent.UrlPath)" class="thumb" >
                <div style="width: 298px; height: 188px" class="fb-like-box">
                    @Url.Thumbnail(nextEvent.FeaturedMediaFile, 298, 188, true)
                </div>
            </a>
            <h1 class="title"><a class="white" href="@Url.Content(nextEvent.UrlPath)">Próximo Evento</a></h1>
            <div class="event-counter">
                <h3><a class="colr" href="@Url.Content(nextEvent.UrlPath)">@nextEvent.Title</a></h3>
                <div id="defaultCountdown">
                    <span class="countdown_row">
                        <span class="countdown_section">
                            <span class="countdown_amount">dia @nextEvent.StartedAt.ToString("dd/MMM").ToUpperInvariant()</span>
                            <br>
                            Faltam @diff.Days dia(s)
                        </span>
                    </span>
                </div>
            </div>
        }
    </div>
    <!-- Event Counter End -->
    <div class="one-third column tweet-banners">
        <div class="fb-like-box" data-href="https://www.facebook.com/kayzoformaturas1" data-width="300" data-height="190" data-show-faces="true" data-colorscheme="dark" data-stream="false" data-show-border="false" data-header="false"></div>
    </div>
    <!-- Phone Start -->
    <div class="one-third column small-banners">
        <a href="~/pagina/contato" class="thumb">
            <img src="~/Content/themes/kayzo/images/contact.jpg" alt="" /></a>
        <h1 class="title"><a class="white" href="~/pagina/contato">Contato</a></h1>
        <div class="event-counter">
            @{
                var contato = @Model.Managers.PostManager.GetByTitle("Contato");
            }
            @if (contato != null)
            {
                <h3><a href="~/pagina/contato">@Html.Raw(contato.Content)</a></h3>
            }
        </div>
    </div>
    <!-- Phone End -->
</div>

<!-- Banners End -->
<div class="container row">
    <div class="two-thirds column left">
        <!-- Tabs Section Start -->
        <div class="tab-section">
            <div class="tab-head">
                <h1>Últimos Eventos</h1>
            </div>
            <div class="tab_container">
                <div class="tab_container_in">
                    <div id="tab-news" class="tab-list" style="display: block">
                        <!-- News List Start -->
                        <ul class="news-list">
                            @foreach (var post in Model.Managers.PostManager.GetPublishedByPostTypeAfterDate("Evento", DateTime.Now).OrderByDescending(p => p.StartedAt).Take(6))
                            {
                                <li>
                                    <div class="date">
                                        <h6>@post.StartedAt.ToString("dddd")</h6>
                                        <h1>@post.StartedAt.ToString("ddMMM")</h1>
                                    </div>
                                    <div class="desc">
                                        <h4><a href="@Url.Content(@post.UrlPath)">@post.Title</a></h4>
                                        <p>
                                            @Html.Raw(post.PreviewContent)<a href="@Url.Content(@post.UrlPath)">Saiba mais...</a>
                                        </p>
                                    </div>
                                </li>
                            }
                        </ul>
                        <!-- News List End -->
                        <a href="~/eventos" class="button">Visualizar mais eventos</a>
                    </div>
                    <div class="clear"></div>
                </div>
            </div>
        </div>
        <!-- Tabs Section End -->
    </div>
    <div class="one-third column left">
        <div class="box-small">
            <h1 class="heading">Depoimentos</h1>
            <div style="padding: 20px">
                <ul class="news-list">
                    @foreach (var testimonal in Model.Managers.PostManager.GetPublishedByPostType("Depoimento").OrderByDescending(p=>p.CreatedAt).Take(6))
                    {
                        <li>
                            <div>
                                <h4><span style="color: #262626">@testimonal.Title</span></h4>
                                <p style="font-style: italic">
                                    @Html.Raw(testimonal.Content)
                                </p>
                            </div>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </div>
</div>
<div class="clear"></div>

